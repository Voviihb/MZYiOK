     1                                  section .data ; сегмент инициализированных переменных
     2 00000000 0A00                    a dw 10
     3 00000002 2000                    x dw 32
     4 00000004 3200                    b dw 50
     5 00000006 FEFF                    y dw -2
     6                                  
     7                                  section .bss ; сегмент неинициализированных переменных
     8 00000000 <res 00000002>          n resw 1
     9                                  
    10                                  section .text ; сегмент кода
    11                                  global _start
    12                                  _start:
    13 00000000 668B0D[06000000]        mov CX, [y]
    14 00000007 66030D[00000000]        add CX, [a] ;CX = y + a
    15 0000000E 66A1[02000000]          mov AX, [x]
    16 00000014 6699                    cwd ;AX -> DX:AX (расширение для деления)
    17 00000016 66F7F9                  idiv CX ; AX := (DX:AX) / CX или x / (y + a)
    18 00000019 6689C6                  mov SI, AX ; сохранили результат вычисления в SI
    19                                  
    20 0000001C 66A1[04000000]          mov AX, [b]
    21 00000022 66F72D[06000000]        imul WORD[y] ; DX:AX = b * y
    22 00000029 66F73D[00000000]        idiv WORD[a] ; AX := (DX:AX) / [a] или (b * y) / a
    23 00000030 6689C7                  mov DI, AX ; сохранили результат вычисления в DI
    24                                  
    25 00000033 66A1[02000000]          mov AX, [x]
    26 00000039 66F72D[02000000]        imul WORD[x] ; DX:AX = x * x
    27 00000040 66F72D[00000000]        imul WORD[a] ; DX:AX = a * x * x
    28                                  
    29                                  ; вычисляем результат, он будет в [n]
    30 00000047 6629F8                  sub AX, DI
    31 0000004A 6601F0                  add AX, SI
    32 0000004D 66A3[00000000]          mov [n], AX
    33                                  
    34                                  
    35                                  
    36                                  
    37                                  
    38                                  
    39                                  
    40                                  ; write
    41                                  
    42                                  ; read
    43                                  
    44                                  ; exit
    45 00000053 B801000000              mov eax, 1 ; системная функция 1 (exit)
    46 00000058 31DB                    xor ebx, ebx ; код возврата 0
    47 0000005A CD80                    int 80h ; вызов системной функции
